=== 2015.08.15

Q: What'd I do to blow up the coordinates from binary kilometers to meters?
A:
$ jq '.[].points[][] |= (. * 1024 | floor)' arcs.json  > arcs2.json
$ jq '.[]["x", "y"] |= (. * 1024 | floor)' images.json > images2.json
$ jq '.[].p["x", "y"] |= (. * 1024 | floor)' labels.json > labels2.json
$ jq '.[]["x", "y"] |= (. * 1024 | floor)' roads.json > roads2.json

Q: Do I want to keep the representation of arcs including both endpoints?
A: Yeah, I think it'll be fewer headaches when I have three or more
arcs joined up at a vertex. Otherwise it'll depend on the orientation
of the arc whether it includes that vertex or not.

Q: What does this mean I have to do?
A: Track multiple vertex-ownership. If I'm dealing with the origin of
an arc that loops back on itself, that single arc owns the vertex
twice.

TODO: Check if a single arc has multiple ownership of a vertex, it
*only* occurs between the first and last points in the arc. Something
similar for multiarc polygons.

Q: How did I slurp all the json together into one blob?
A:
$ jq -s '[["labels", "images", "arcs", "features", "roads"] as $k \
 | range(0; ($k | length)) as $ix | {key: $k[$ix], value: .[$ix]}] \
 | from_entries 'labels.json images.json arcs.json features.json roads.json

TODO: Merge file watching and file serving

Q: How did I turn the hash of features into array with name attributes?
A:
$ jq '.features.objects |=  (to_entries | .[] |= .value + {name: .key})' geo.json

=== 2015.08.16

TODO: get rid of bboxes via "_" properties?

Q: How do I do the inverse of paths in jq?
A: getpath --- which appears undocumented, see
https://github.com/stedolan/jq/issues/914

=== 2015.08.30

Q: What are some things to do?
A:
Move rivers to coastline layer
# Move labels to coastline layer
# Make snap work when moving vertices
Separate fused vertices/edges
Select contiguous sections by identifying endpoints
# measure distance
# cache whole screen rendering when panning
separate canvas for temporary effects
# spacebar pan

=== 2016.12.18

Q: How do I find out current camera position?
A: state.state.get('camera').toJS()
or state.camera();

Q: Given a world position, how do I find the screen position it corresponds to?
A: Let world position be p. Then
x: camera.x + camera.scale() * p.x
y: camera.y - camera.scale() * p.y
(this is xform in main.js, inverse is inv_xform)

Q: How do I set camera position?
A: Check out zoom_to

=== 2018.11.14

Q: How'd I convert zoom strings to numbers?
A:
$ jq 'walk(if type == "object" and .zoom and (.zoom | type) == "string" then (.zoom |= tonumber) else . end) ' \
  data/geo.json  | sponge data/geo.json
